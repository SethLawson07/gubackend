// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id              String   @id @default(auto()) @map("_id") @db.ObjectId()
    user_name       String
    email           String?  @unique
    password        String
    phone           String   @unique
    profile_picture String
    is_admin        Boolean
    finance_pro_id  String?
    is_verified     Boolean?
    role            String //customer,agent,delivery_man,command_handler,admin
}

model Category {
    id          String        @id @default(auto()) @map("_id") @db.ObjectId()
    name        String        @unique
    image       String
    featured    Boolean
    SubCategory SubCategory[]
}

model SubCategory {
    id            String   @id @default(auto()) @map("_id") @db.ObjectId()
    name          String
    image         String
    featured      Boolean
    category_data Category @relation(fields: [category], references: [id])
    category      String   @db.ObjectId()
    Item          Item[]
}

model Item {
    id               String      @id @default(auto()) @map("_id") @db.ObjectId()
    name             String
    image            String
    featured         Boolean
    schema           String
    subcategory_data SubCategory @relation(fields: [subcategory], references: [id])
    subcategory      String      @db.ObjectId()
    Product          Product[]
}

model Product {
    id              String   @id @default(auto()) @map("_id") @db.ObjectId()
    name            String
    description     String?
    images          String[]
    item            String   @db.ObjectId()
    featured        Boolean
    in_stock        Int
    price           Float
    pay_at_delivery Boolean
    is_in_discount  Boolean
    discount_price  Float?
    fields          String?
    brand           String   @db.ObjectId()
    brand_data      Brand    @relation(fields: [brand], references: [id])
    item_data       Item     @relation(fields: [item], references: [id])
}

model PromoCode {
    id              String   @id @default(auto()) @map("_id") @db.ObjectId()
    code            String   @unique
    valid           Boolean
    discount        Int
    conditions      String[]
    featured        Boolean
    expiration_date String
}

model Slider {
    id       String  @id @default(auto()) @map("_id") @db.ObjectId()
    big_text String
    alt_text String
    image    String
    featured Boolean
}

model Order {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    user       String
    amount     Float
    remainder  Float
    paid       Boolean
    cart       Json
    promocodes String[]
    status     String
}

model Transaction {
    id     String @id @default(auto()) @map("_id") @db.ObjectId
    user   String
    date   String
    amount Float
}

model PromoCodeUsage {
    id   String @id @default(auto()) @map("_id") @db.ObjectId
    code String
    user String
}

model Brand {
    id       String    @id @default(auto()) @map("_id") @db.ObjectId
    name     String    @unique
    image    String
    featured Boolean
    Product  Product[]
}
